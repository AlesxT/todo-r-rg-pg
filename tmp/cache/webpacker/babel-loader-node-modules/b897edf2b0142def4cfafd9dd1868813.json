{"ast":null,"code":"var _jsxFileName = \"/home/lex/Projects/Rails/todolist-react-rg/app/javascript/components/Dashboard/TodoLists/TodoList/TodoListHeader/index.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react'; //import styles from './App.module.scss'\n\nimport axios from 'axios';\nimport './TodoListHeader.scss';\nimport { connect } from 'react-redux';\nimport { UPDATE_PROJECT, DELETE_PROJECT } from '../../../../../actions/actionTypes'; //import {TOGGLE_PROJECT, DELETE_PROJECT} from 'action/actionTypes'\n\nvar TodoListHeader = /*#__PURE__*/function (_React$Component) {\n  _inherits(TodoListHeader, _React$Component);\n\n  var _super = _createSuper(TodoListHeader);\n\n  function TodoListHeader(props) {\n    var _this;\n\n    _classCallCheck(this, TodoListHeader);\n\n    _this = _super.call(this, props);\n\n    _this.putProject = function () {\n      //let self = this;\n      //var idproject = this.props.project.id;\n      console.log(_this.props.project.id);\n      var projectput = prompt(\"Please enter your new name for project\");\n\n      if (projectput != null) {\n        console.log(projectput);\n        axios.put('/api/projects', {\n          name: projectput,\n          id: _this.props.project.id\n        }).then(function (response) {\n          _this.props.dispatch({\n            type: UPDATE_PROJECT,\n            projectId: _this.props.project.id\n          });\n\n          console.log(response);\n        }, function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.delProject = function () {\n      var project = _this.props.project;\n      var conf = confirm('Are you sure you want to delete the project: ' + _this.props.project.name); //axios.delete('/api/projects', { data: { id: this.props.project.id } });\n\n      if (conf) {\n        axios[\"delete\"]('/api/projects', {\n          data: {\n            id: project.id\n          }\n        }).then(function (response) {\n          _this.props.dispatch({\n            type: DELETE_PROJECT,\n            projectId: project.id\n          });\n\n          console.log(response);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoListHeader, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row h-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 text-center border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"C\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-9 border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, this.props.project.id, \": \", this.props.project.name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 text-center border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: this.putProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"E\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 text-center border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: this.delProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, \"D\"))));\n    }\n  }]);\n\n  return TodoListHeader;\n}(React.Component); //export default TodoListHeader\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projects: state.projects\n  };\n};\n\nexport default connect(mapStateToProps)(TodoListHeader);","map":{"version":3,"sources":["/home/lex/Projects/Rails/todolist-react-rg/app/javascript/components/Dashboard/TodoLists/TodoList/TodoListHeader/index.jsx"],"names":["React","axios","connect","UPDATE_PROJECT","DELETE_PROJECT","TodoListHeader","props","putProject","console","log","project","id","projectput","prompt","put","name","then","response","dispatch","type","projectId","error","delProject","conf","confirm","data","Component","mapStateToProps","state","projects"],"mappings":"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","sourcesContent":["import React from 'react'\n//import styles from './App.module.scss'\nimport axios from 'axios'\nimport './TodoListHeader.scss'\nimport {connect} from 'react-redux'\nimport {UPDATE_PROJECT, DELETE_PROJECT} from '../../../../../actions/actionTypes'\n//import {TOGGLE_PROJECT, DELETE_PROJECT} from 'action/actionTypes'\n\nclass TodoListHeader extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    putProject = () => {\n        //let self = this;\n        //var idproject = this.props.project.id;\n        console.log(this.props.project.id);\n        var projectput = prompt(\"Please enter your new name for project\");\n        if (projectput != null) {\n            console.log(projectput);\n            axios.put('/api/projects', {\n                name: projectput,\n                id: this.props.project.id\n            })\n                .then((response) => {\n                    this.props.dispatch({ type: UPDATE_PROJECT, projectId: this.props.project.id})\n                    console.log(response);\n                }, (error) => {\n                    console.log(error);\n                });\n        }\n    }\n\n    delProject = () => {\n        const {project} = this.props\n        const conf = confirm('Are you sure you want to delete the project: ' + this.props.project.name);\n        //axios.delete('/api/projects', { data: { id: this.props.project.id } });\n        if (conf) {\n            axios.delete('/api/projects', { data: { id: project.id } }).then((response) => {\n                this.props.dispatch({ type: DELETE_PROJECT, projectId: project.id })\n                console.log(response);\n            })\n        }\n    }\n\n\n    render() {\n        return (\n\n            <div className=\"container header\">\n                <div className=\"row h-100\">\n                    <div className=\"col-md-1 text-center border\">\n                        <button type=\"button\" className=\"btn btn-warning\">C</button>\n                    </div>\n                    <div className=\"col-md-9 border\">\n                        <h4 className=\"\">{this.props.project.id}: {this.props.project.name}</h4>\n                    </div>\n                    <div className=\"col-md-1 text-center border\">\n                        <button type=\"button\" className=\"btn btn-warning\" onClick={this.putProject}>E</button>\n                    </div>\n                    <div className=\"col-md-1 text-center border\">\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={this.delProject}>D</button>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n//export default TodoListHeader\n\nconst mapStateToProps = (state) => {\n\treturn{\n\t\tprojects: state.projects\n\t}\n}\n\nexport default connect (mapStateToProps)(TodoListHeader)"]},"metadata":{},"sourceType":"module"}