{"ast":null,"code":"var _jsxFileName = \"/home/lex/Projects/Rails/todolist-react-rg/app/javascript/components/Dashboard/index.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport axios from 'axios'; //import styles from './App.module.scss'\n\nimport Todolists from './TodoLists';\n\nvar Dashboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard(props) {\n    _classCallCheck(this, Dashboard);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Dashboard, [{\n    key: \"addProject\",\n    value: function addProject() {\n      var projectnew = prompt(\"Please enter your new project\", \"\");\n\n      if (projectnew != null) {\n        alert(projectnew);\n        axios.post('/api/projects', projectnew).then(function (response) {\n          return response.data.name;\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Todolists, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-succes mr-2\",\n        onClick: this.addProject,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 10\n        }\n      }, \"Add todo\")));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/lex/Projects/Rails/todolist-react-rg/app/javascript/components/Dashboard/index.jsx"],"names":["React","axios","Todolists","Dashboard","props","projectnew","prompt","alert","post","then","response","data","name","addProject","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,S;;;;;AAEL,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACZA,KADY;AAElB;;;;iCAEY;AACZ,UAAIC,UAAU,GAAGC,MAAM,CAAC,+BAAD,EAAkC,EAAlC,CAAvB;;AACA,UAAID,UAAU,IAAI,IAAlB,EAAwB;AACvBE,QAAAA,KAAK,CAACF,UAAD,CAAL;AACAJ,QAAAA,KAAK,CAACO,IAAN,CAAW,eAAX,EAA4BH,UAA5B,EACEI,IADF,CACO,UAAAC,QAAQ;AAAA,iBAAKA,QAAQ,CAACC,IAAT,CAAcC,IAAnB;AAAA,SADf;AAGA;AACD;;;6BAEQ;AACR,0BACC,uDACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,qBAAhC;AAAsD,QAAA,OAAO,EAAE,KAAKC,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL,CAHD,CADD;AASA;;;;EA1BsBb,KAAK,CAACc,S;;AA6B9B,eAAeX,SAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n//import styles from './App.module.scss'\nimport Todolists from './TodoLists'\n\nclass Dashboard extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\taddProject() {\n\t\tvar projectnew = prompt(\"Please enter your new project\", \"\");\n\t\tif (projectnew != null) {\n\t\t\talert(projectnew);\n\t\t\taxios.post('/api/projects', projectnew)\n\t\t\t\t.then(response => (response.data.name));\n\t\t\t\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Todolists />\n\n\t\t\t\t<div><button type=\"button\" className=\"btn btn-succes mr-2\" onClick={this.addProject}>Add todo</button></div>\n\n\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}