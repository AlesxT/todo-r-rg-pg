{"ast":null,"code":"var _jsxFileName = \"/home/lex/Projects/Rails/todolist-react-rg/app/javascript/components/Dashboard/TodoLists/TodoList/TasksLists/Task/index.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { UPDATE_PROJECT } from '../../../../../../actions/actionTypes';\n\nvar Task = /*#__PURE__*/function (_React$Component) {\n  _inherits(Task, _React$Component);\n\n  var _super = _createSuper(Task);\n\n  function Task(props) {\n    var _this;\n\n    _classCallCheck(this, Task);\n\n    _this = _super.call(this, props);\n\n    _this.putTask = function () {\n      //var idproject = this.props.project.id;\n      console.log(_this.props.task.project_id, _this.props.task.id);\n      var taskput = prompt(\"Please enter your new name for the project\");\n\n      if (taskput != null) {\n        console.log(taskput);\n        axios.put('/api/tasks', {\n          id: _this.props.task.id,\n          name: taskput\n        }).then(function (response) {\n          console.log(response);\n        }, function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.delTask = function () {\n      //const {project} = this.props\n      var conf = confirm('Are you sure you want to delete the project: ' + _this.props.task.name); //axios.delete('/api/projects', { data: { id: this.props.project.id } });\n\n      if (conf) {\n        axios[\"delete\"]('/api/tasks', {\n          data: {\n            id: _this.props.task.id\n          }\n        }).then(function (response) {\n          //this.props.dispatch({ type: DELETE_PROJECT, projectId: project.id })\n          //this.props.dispatch({ type: DELETE_PROJECT, projectId: project.id })\n          _this.props.dispatch({\n            type: UPDATE_PROJECT,\n            project: response.data\n          });\n\n          console.log(response);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Task, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row bg-white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 border p-2 text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md border \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, this.props.task.id, \": \", this.props.task.name), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 text-center border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: this.putTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, \"E\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-1 text-center border\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: this.delTask,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"D\")));\n    }\n  }]);\n\n  return Task;\n}(React.Component);\n\nexport default Task;","map":{"version":3,"sources":["/home/lex/Projects/Rails/todolist-react-rg/app/javascript/components/Dashboard/TodoLists/TodoList/TasksLists/Task/index.jsx"],"names":["React","axios","connect","UPDATE_PROJECT","Task","props","putTask","console","log","task","project_id","id","taskput","prompt","put","name","then","response","error","delTask","conf","confirm","data","dispatch","type","project","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport { UPDATE_PROJECT} from '../../../../../../actions/actionTypes'\n\n\nclass Task extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    putTask = () => {\n        //var idproject = this.props.project.id;\n        console.log(this.props.task.project_id , this.props.task.id);\n\t\tvar taskput = prompt(\"Please enter your new name for the project\");\n\t\tif (taskput != null) {\n            console.log(taskput);\n\t\t\taxios.put('/api/tasks', {\n                id: this.props.task.id,\n                name: taskput\n\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t}, (error) => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n    }\n    \n    delTask = () => {\n        //const {project} = this.props\n        const conf = confirm('Are you sure you want to delete the project: ' + this.props.task.name);\n        //axios.delete('/api/projects', { data: { id: this.props.project.id } });\n        if (conf) {\n            axios.delete('/api/tasks', { data: { id: this.props.task.id } }).then((response) => {\n                //this.props.dispatch({ type: DELETE_PROJECT, projectId: project.id })\n                //this.props.dispatch({ type: DELETE_PROJECT, projectId: project.id })\n                this.props.dispatch({ type: UPDATE_PROJECT, project: response.data})\n\n                console.log(response);\n            })\n        }\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"row bg-white\">\n                <div className=\"col-md-1 border p-2 text-center\">\n                    <input type=\"checkbox\" />\n                </div>\n                <div className=\"col-md border \">\n                    {this.props.task.id}: {this.props.task.name}\n    \t\t\t</div>\n                <div className=\"col-md-1 text-center border\">\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.putTask}>E</button>\n                </div>\n                <div className=\"col-md-1 text-center border\">\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.delTask}>D</button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Task"]},"metadata":{},"sourceType":"module"}