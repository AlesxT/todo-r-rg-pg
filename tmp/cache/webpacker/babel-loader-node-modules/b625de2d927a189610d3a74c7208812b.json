{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { LOAD_TODOS, ADD_TODO, TOGGLE_TODO, DELETE_TODO } from '../actions/actionTypes';\n\nfunction todosReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_TODOS:\n      return action.todos;\n\n    case ADD_TODO:\n      return [].concat(_toConsumableArray(state), [{\n        id: action.id,\n        title: action.title,\n        done: false\n      }]);\n\n    case TOGGLE_TODO:\n      return state.map(function (todo) {\n        return todo.id === action.index ? _objectSpread(_objectSpread({}, todo), {}, {\n          done: !todo.done\n        }) : todo;\n      });\n\n    case DELETE_TODO:\n      return state.filter(function (todo) {\n        return todo.id !== action.index;\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default todosReducer;","map":{"version":3,"sources":["/home/lex/Projects/Rails/todolist-react-rg/app/javascript/reducers/todosReducer.js"],"names":["LOAD_TODOS","ADD_TODO","TOGGLE_TODO","DELETE_TODO","todosReducer","state","action","type","todos","id","title","done","map","todo","index","filter"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,WAA/B,EAA4CC,WAA5C,QAA+D,wBAA/D;;AAEA,SAASC,YAAT,GACA;AAAA,MADsBC,KACtB,uEAD8B,EAC9B;AAAA,MADkCC,MAClC;;AACI,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,UAAL;AACI,aAAOM,MAAM,CAACE,KAAd;;AAEJ,SAAKP,QAAL;AACI,0CACOI,KADP,IAEI;AACII,QAAAA,EAAE,EAAEH,MAAM,CAACG,EADf;AAEIC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFlB;AAGIC,QAAAA,IAAI,EAAE;AAHV,OAFJ;;AASJ,SAAKT,WAAL;AACI,aAAOG,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI;AAAA,eAAKA,IAAI,CAACJ,EAAL,KAAYH,MAAM,CAACQ,KAApB,mCACbD,IADa;AACPF,UAAAA,IAAI,EAAE,CAACE,IAAI,CAACF;AADL,aAEjBE,IAFa;AAAA,OAAd,CAAP;;AAKJ,SAAKV,WAAL;AACI,aAAOE,KAAK,CAACU,MAAN,CAAa,UAAAF,IAAI;AAAA,eAAIA,IAAI,CAACJ,EAAL,KAAYH,MAAM,CAACQ,KAAvB;AAAA,OAAjB,CAAP;;AAEJ;AACI,aAAOT,KAAP;AAxBR;AA0BH;;AAED,eAAeD,YAAf","sourcesContent":["import { LOAD_TODOS, ADD_TODO, TOGGLE_TODO, DELETE_TODO } from '../actions/actionTypes'\n\nfunction todosReducer(state = [], action) \n{\n    switch(action.type) {\n        case LOAD_TODOS:\n            return action.todos;\n\n        case ADD_TODO:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    title: action.title,\n                    done: false\n                }\n            ];\n\n        case TOGGLE_TODO:\n            return state.map(todo => (todo.id === action.index) \n                  ? {...todo, done: !todo.done}\n                  : todo\n            );\n\n        case DELETE_TODO:\n            return state.filter(todo => todo.id !== action.index);\n\n        default:\n            return state;    \n    }\n}\n\nexport default todosReducer"]},"metadata":{},"sourceType":"module"}