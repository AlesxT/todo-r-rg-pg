{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { GET_PROJECTS, ADD_PROJECT, UPDATE_PROJECT, DELETE_PROJECT } from '../actions/actionTypes';\n\nfunction projectsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_PROJECTS:\n      return action.projects;\n\n    case ADD_PROJECT:\n      //debugger\n      console.log(action);\n      return [].concat(_toConsumableArray(state), [action.project]);\n\n    case UPDATE_PROJECT:\n      return state.map(function (project) {\n        return (project.id === action.projectId)[action.project];\n      });\n\n    case DELETE_PROJECT:\n      return state.filter(function (project) {\n        return project.id !== action.projectId;\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default projectsReducer;","map":{"version":3,"sources":["/home/lex/Projects/Rails/todolist-react-rg/app/javascript/reducers/projectsReducer.js"],"names":["GET_PROJECTS","ADD_PROJECT","UPDATE_PROJECT","DELETE_PROJECT","projectsReducer","state","action","type","projects","console","log","project","map","id","projectId","filter"],"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,cAApC,EAAoDC,cAApD,QAA0E,wBAA1E;;AAEA,SAASC,eAAT,GAA6C;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,YAAL;AACC,aAAOM,MAAM,CAACE,QAAd;;AAED,SAAKP,WAAL;AACC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,0CACID,KADJ,IAECC,MAAM,CAACK,OAFR;;AAKD,SAAKT,cAAL;AACC,aAAOG,KAAK,CAACO,GAAN,CAAU,UAAAD,OAAO;AAAA,eAAI,CAACA,OAAO,CAACE,EAAR,KAAeP,MAAM,CAACQ,SAAvB,EAC1BR,MAAM,CAACK,OADmB,CAAJ;AAAA,OAAjB,CAAP;;AAKD,SAAKR,cAAL;AACC,aAAOE,KAAK,CAACU,MAAN,CAAa,UAAAJ,OAAO;AAAA,eAAIA,OAAO,CAACE,EAAR,KAAeP,MAAM,CAACQ,SAA1B;AAAA,OAApB,CAAP;;AAED;AACC,aAAOT,KAAP;AAtBF;AAwBA;;AAED,eAAeD,eAAf","sourcesContent":["import { GET_PROJECTS, ADD_PROJECT, UPDATE_PROJECT, DELETE_PROJECT } from '../actions/actionTypes'\n\nfunction projectsReducer(state = [], action) {\n\tswitch (action.type) {\n\t\tcase GET_PROJECTS:\n\t\t\treturn action.projects;\n\n\t\tcase ADD_PROJECT:\n\t\t\t//debugger\n\t\t\tconsole.log(action)\n\t\t\treturn [\n\t\t\t\t...state,\n\t\t\t\taction.project\n\t\t\t];\n\n\t\tcase UPDATE_PROJECT:\n\t\t\treturn state.map(project => (project.id === action.projectId)[\n\t\t\t\t\taction.project\n\t\t\t\t]\n\t\t\t);\n\n\t\tcase DELETE_PROJECT:\n\t\t\treturn state.filter(project => project.id !== action.projectId);\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default projectsReducer"]},"metadata":{},"sourceType":"module"}